# APIFixtures loads fixture data generated by the core Stripe API so that we
# can have slightly more accurate and up-to-date resource information in our
# tests.
class APIFixtures
  def initialize
    @fixtures = ::JSON.parse(File.read("#{PROJECT_ROOT}/openapi/fixtures.json"),
      symbolize_names: true)[:resources]
    @fixtures.merge!(PrereleaseFixtures.fixtures)
    freeze_recursively(@fixtures)
  end

  def [](name)
    @fixtures[name]
  end

  def fetch(*args)
    @fixtures.fetch(*args)
  end

  private

  # This is a special module reserved for resources that are either prototypes
  # or otherwise private and not yet available in the OpenAPI spec. Please aim
  # to remove them and replace them with OpenAPI fixtures as soon as those are
  # available.
  module PrereleaseFixtures
    def self.fixtures
      {
        :payout => payout,
      }
    end

    def self.payout
      {}
    end
  end

  def freeze_recursively(data)
    data.each do |k, v|
      if v.is_a?(Hash)
        freeze_recursively(v)
      end
    end
    data.freeze
  end
end
